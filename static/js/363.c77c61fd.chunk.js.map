{"version":3,"file":"static/js/363.c77c61fd.chunk.js","mappings":"0KAEMA,E,MAAWC,GAAAA,OAAa,CAC5BC,QAAS,gCACTC,OAAQ,CACNC,QAASC,sCAIAC,EAAM,CACjBC,eAAgB,kBAAMP,EAAS,oBAAf,EAChBQ,YAAa,SAAAC,GAAK,OAAIT,EAAS,eAAgB,CAAEG,OAAQ,CAAEM,MAAAA,IAAzC,EAClBC,eAAgB,SAAAC,GAAE,OAAIX,EAAS,SAAD,OAAUW,GAAtB,EAClBC,aAAc,SAAAD,GAAE,OAAIX,EAAS,SAAD,OAAUW,EAAV,YAAZ,EAChBE,gBAAiB,SAAAF,GAAE,OAAIX,EAAS,SAAD,OAAUW,EAAV,YAAZ,E,4DCgBrB,IA1BsB,SAAC,GAAe,IAAbG,EAAY,EAAZA,MACjBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,wBACGF,EAAMG,KAAI,gBAAGN,EAAH,EAAGA,GAAIO,EAAP,EAAOA,MAAOC,EAAd,EAAcA,KAAd,OACT,yBACE,SAAC,KAAD,CAASC,GAAE,kBAAaT,EAAGU,YAAcC,MAAO,CAAEC,KAAMR,GAAxD,gBACGG,QADH,IACGA,EAAAA,EAASC,KAFLR,EADA,KAShB,C,gGCyBD,UApCe,WACb,OAAsCa,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMpB,EAAQmB,EAAaE,IAAI,UAE/BC,EAAAA,EAAAA,YAAU,WACR,OAAItB,QAAJ,IAAIA,GAAAA,EAAOuB,OACT1B,EAAAA,EAAAA,YAAgBG,GAAOwB,MAAK,SAAAC,GAAG,OAAIR,EAAeQ,EAAIC,KAAKC,QAA5B,IAE/BV,EAAe,GAElB,GAAE,CAACjB,IASJ,OACE,4BACE,SAAC,IAAD,WACE,kBAAM4B,SAVS,SAAAC,GACnBA,EAAEC,iBACF,IAAM9B,EAAQ6B,EAAEE,OAAO,GAAGC,MAE1BZ,EAAqB,OAALpB,QAAK,IAALA,GAAAA,EAAOuB,OAAS,CAAEvB,MAAAA,GAAU,CAAC,EAC9C,EAKK,WACE,kBAAOiC,KAAK,SAASC,aAAclC,KACnC,mBAAQiC,KAAK,SAAb,0BAIJ,SAAC,IAAD,CAAe5B,MAAOW,MAG3B,C,qECrCYmB,E,OAAMC,GAAAA,IAAH,gD","sources":["api/index.js","components/MovieLinkList/index.js","components/Movies/index.js","components/common/Box.js"],"sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: process.env.REACT_APP_API_KEY,\n  },\n});\n\nexport const API = {\n  getTrendMovies: () => instance('trending/all/week'),\n  searchMovie: query => instance('search/movie', { params: { query } }),\n  getSingleMovie: id => instance(`movie/${id}`),\n  getMovieCast: id => instance(`movie/${id}/credits`),\n  getMovieReviews: id => instance(`movie/${id}/reviews`),\n};\n","import React from 'react';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst MovieLinkList = ({ items }) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {items.map(({ id, title, name }) => (\n        <li key={id}>\n          <NavLink to={`/movies/${id.toString()}`} state={{ from: location }}>\n            {title ?? name}\n          </NavLink>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nMovieLinkList.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n      name: PropTypes.string,\n    })\n  ).isRequired,\n};\n\nexport default MovieLinkList;\n","import React, { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { API } from 'api';\nimport MovieLinkList from 'components/MovieLinkList';\nimport { Box } from 'components/common/Box';\n\nconst Movies = () => {\n  const [resultItems, setResultItems] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (query?.length) {\n      API.searchMovie(query).then(res => setResultItems(res.data.results));\n    } else {\n      setResultItems([]);\n    }\n  }, [query]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const query = e.target[0].value;\n\n    setSearchParams(query?.length ? { query } : {});\n  };\n\n  return (\n    <div>\n      <Box>\n        <form onSubmit={handleSubmit}>\n          <input type=\"search\" defaultValue={query} />\n          <button type=\"submit\">Search</button>\n        </form>\n      </Box>\n\n      <MovieLinkList items={resultItems} />\n    </div>\n  );\n};\n\nMovies.propTypes = {};\n\nexport default Movies;\n","import styled from 'styled-components';\n\nexport const Box = styled.div`\n  padding: 20px 20px 0;\n`;\n"],"names":["instance","axios","baseURL","params","api_key","process","API","getTrendMovies","searchMovie","query","getSingleMovie","id","getMovieCast","getMovieReviews","items","location","useLocation","map","title","name","to","toString","state","from","useState","resultItems","setResultItems","useSearchParams","searchParams","setSearchParams","get","useEffect","length","then","res","data","results","onSubmit","e","preventDefault","target","value","type","defaultValue","Box","styled"],"sourceRoot":""}